/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.26
 * Generated at: 2024-07-28 07:09:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.wifi;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.ljh.Rq;
import com.ljh.dto.RowDTO;
import com.ljh.mvc.wifi.WifiRepository;
import com.ljh.dto.BookMarkGroupDTO;
import com.ljh.mvc.bookmarkgroup.BookMarkGroupRepository;
import java.util.List;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/jsp/common/foot.jspf", Long.valueOf(1721812780159L));
    _jspx_dependants.put("/jsp/common/head.jspf", Long.valueOf(1721900173297L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("com.ljh.Rq");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.ljh.dto.RowDTO");
    _jspx_imports_classes.add("com.ljh.dto.BookMarkGroupDTO");
    _jspx_imports_classes.add("com.ljh.mvc.wifi.WifiRepository");
    _jspx_imports_classes.add("com.ljh.mvc.bookmarkgroup.BookMarkGroupRepository");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; chatset=UTF-8;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 모바일에서 디자인이 축소되지 않게 하기 위한 코드 -->\r\n");
      out.write("    <meta name=\"viewport\"\r\n");
      out.write("          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("    <title>Wifi Project</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- 제이쿼리 불러오기 -->\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- 데이지 UI 불러오기 -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/daisyui@4.12.10/dist/full.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("    <!-- 테일윈드 불러오기 -->\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- 폰트어썸 불러오기 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        th {\r\n");
      out.write("            border : solid 1px #EFFBEF;\r\n");
      out.write("            background: #01DF3A;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<style>\r\n");
      out.write("    @font-face {\r\n");
      out.write("        font-family: 'GmarketSansMedium';\r\n");
      out.write("        src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\r\n");
      out.write("        font-weight: normal;\r\n");
      out.write("        font-style: normal;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    html > body {\r\n");
      out.write("        font-family: 'GmarketSansMedium';\r\n");
      out.write("        text-underline-position: under;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<header class=\"on-bar h-[80px] bg-[#F2F2F2]\">\r\n");
      out.write("    <div class=\"container mx-auto px-3\">\r\n");
      out.write("        <a href=\"/wifi/main\" class=\"logo flex h-full items-center px-3 gap-x-1\">\r\n");
      out.write("            <div class=\"mt-[15px]\">\r\n");
      out.write("                <span class=\"text-2xl\">\r\n");
      out.write("                    <i class=\"fa-solid fa-wifi\"></i>\r\n");
      out.write("                </span>\r\n");
      out.write("                <span class=\"font-bold text-2xl\">\r\n");
      out.write("                    와이파이 정보\r\n");
      out.write("                </span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <nav>\r\n");
      out.write("            <ul class=\"flex h-full mt-[5px]\">\r\n");
      out.write("                <li>\r\n");
      out.write("                    <a href=\"/wifi/main\" class=\"flex h-full items-center px-[20px] hover:text-underline hover:text-white gap-x-1\">\r\n");
      out.write("                        <span>\r\n");
      out.write("                            <i class=\"fa-solid fa-house\"></i>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <span>홈</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <a href=\"/wifi/history\" class=\"flex h-full items-center px-[20px] hover:text-underline hover:text-white gap-x-1\">\r\n");
      out.write("                        <span>\r\n");
      out.write("                            <i class=\"fa-solid fa-clock-rotate-left\"></i>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <span>위치 히스토리 목록</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <a href=\"/wifi/load\" class=\"flex h-full items-center px-[20px] hover:text-underline hover:text-white gap-x-1\">\r\n");
      out.write("                        <span>\r\n");
      out.write("                            <i class=\"fa-solid fa-download\"></i>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <span>Open APi 와이파이 정보 가져오기</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <a href=\"/wifi/bookmark/list\" class=\"flex h-full items-center px-[20px] hover:text-underline hover:text-white gap-x-1\">\r\n");
      out.write("                        <span>\r\n");
      out.write("                            <i class=\"fa-solid fa-bookmark\"></i>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <span>북마크 목록 보기</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li>\r\n");
      out.write("                    <a href=\"/wifi/bookmarkgroup/list\" class=\"flex h-full items-center px-[20px] hover:text-underline hover:text-white gap-x-1\">\r\n");
      out.write("                        <span>\r\n");
      out.write("                            <i class=\"fa-solid fa-book-bookmark\"></i>\r\n");
      out.write("                        </span>\r\n");
      out.write("                        <span>북마크 그룹 관리</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\r\n");

    BookMarkGroupRepository bookmarkGroupRepository = new BookMarkGroupRepository();
    RowDTO rowDTO = (RowDTO)request.getAttribute("row");
    List<BookMarkGroupDTO> bookMarkGroupList = bookmarkGroupRepository.selectAll();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<form method=\"POST\" action=\"http://localhost:8081/wifi/bookmark/add\">\r\n");
      out.write("    <select name=\"bookmark_group_name\" class=\"select select-bordered w-full max-w-xs\">\r\n");
      out.write("        <option value=\"--북마크 그룹 이름 선택\">북마크 그룹 이름 선택</option>\r\n");
      out.write("\r\n");
      out.write("        ");
 for (BookMarkGroupDTO bookMarkGroupDTO : bookMarkGroupList){ 
      out.write("\r\n");
      out.write("        <option value=\"");
      out.print(bookMarkGroupDTO.getID());
      out.write('"');
      out.write('>');
      out.print(bookMarkGroupDTO.getNAME());
      out.write("</option>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </select>\r\n");
      out.write("    <input type=\"hidden\" name=\"wifi\" value=\"");
      out.print(rowDTO.getID());
      out.write("\">\r\n");
      out.write("    <input class=\"btn btn-active btn-accent\" type=\"submit\" value=\"북마크 추가하기\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<div class=\"overflow-x-auto\">\r\n");
      out.write("    <table class=\"table\">\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>거리(KM)</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getDIST());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>관리번호</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_MGR_NO());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>자치구</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_WRDOFC());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>와이파이명</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_MAIN_NM());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>도로명주소</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_ADRES1());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>상세주소</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_ADRES2());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>설치위치(층)</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_INSTL_FLOOR());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>설치기관</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_INSTL_MBY());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>설치유형</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_INSTL_TY());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>서비스구분</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_SVC_SE());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>망종류</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_CMCWR());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>설치년도</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_CNSTC_YEAR());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>실내외구분</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_INOUT_DOOR());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>WIFI접속환경</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getX_SWIFI_REMARS3());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>X좌표</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getLAT());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>Y좌표</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getLNT());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr class=\"hover\">\r\n");
      out.write("            <th>작업일자</th>\r\n");
      out.write("            <td>");
      out.print(rowDTO.getWORK_DTTM());
      out.write("</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
